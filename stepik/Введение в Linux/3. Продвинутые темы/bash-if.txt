Ветвление: основы
Синтаксис:
if [[ условие ]]
then
   # действие, если условие истинно
fi

Условия(строки):
-z <строка>    # строка пуста
-n <строка>    # строка не пуста
<стр1> == <стр2>     # строки равны
<стр1> != <стр2>     # строки не равны 

Пример:

if [[ -z $1 ]]
then
   echo "Первый аргумент пустой!"
fi

if [[ $var1 == $var2 ]]
then
   echo "Переменные равны!"
fi

Условия [числа(строки)]:
   <число/строка> операция <число/строка>
   
-eq, (==)   # равно
-ne, (!=)   # не равно
-lt, (<)    # меньше
-le,        # меньше или равно
-gt, (>)    # больше
-ge,        # больше или равно

флаги вида "-eq", "-ne", "-lt" применяются только к числам
знаки "==", "<", ">" только к строкам

Условия(файлы):
   -e <путь> # путь существует
   -f <путь> # это файл
   -d <путь> # это директория
   -s <путь> # размер файла больше 0
   -x <путь> # файл исполняемый
   
Условия(логические):
   !  # отрицание логического выражения
   && # логическое "И"
   || # логическое "ИЛИ"


if [[ условие1 ]]
then
   # действия, если условие1 истинно
elif [[ условие2 ]]
then
   # действия, если условие1 ложно, но условие2 истинно
else
   # действия, если оба условия ложны
fi


case переменная in
знач1)
   # действия, если переменная==знач1
   ;;
знач2)
   # действия, если переменная==знач2
   ;;
*)
   # действия, если переменная не равно ни одному из вариантов
esac


Циклы:

for переменная in список_значений
do
   # действия, каждый раз переменная принимает следующее значение из списка
done

break       прервать выполнение
continue    перейти на след. значение

while [[ условие ]]
do
   # действия, пока условие истинно
done

read переменная
   записать введенное пользователем значение в переменную
   
for i in 1 2 3 4 5
do
  file_name=file${i}.txt
  if [[ -e $file_name ]]
  then
    continue
  fi
  echo "Creating file $file_name"
  touch $file_name
done


again=yes 
while [ "$again" == "yes" ] 
do
  echo "Please enter a name:"
  read name
  echo "The name you entered is $name"

  echo "Do you wish to continue? (yes/no)"
  read again
done

